template_code = """

int return_function() { return $$int_ans$$; }

int fib(int n)
{
    if (n == 0)
        return 0;
    if (n == 1)
        return 1;
    else
        return fib(n - 1) + fib(n - 2);
}


int main() {
    /*
    * Функции — это фрагменты модульного кода.
    * По назначению они аналогичны методам в Java.
    * Поскольку в языке C нет классов, функции можно воспринимать
    * как статические методы в Java.
    *
    * Рекурсивные функции вызывают сами себя с новыми параметрами,
    * пока не достигнут базового случая (условия выхода из рекурсии).
    * В случае с числами Фибоначчи базовые случаи - это fib(0) и fib(1).
    */

    /*
    * Проверка простой функции, возвращающей значение
    * Ожидается конкретное значение, которое должно вернуть return_function()
    */
    if (return_function() != {[1]}) {
        return 1;
    }

    /*
    * Проверка рекурсивной функции Фибоначчи
    * Функция должна вернуть определенное число Фибоначчи
    * для переданного ей аргумента
    */
    if (fib($$fib_val$$) != {[2]}) {
        return 2;
    }

    return 0;
}
"""

template_condition = "Заполните пропущенные значения переменных таким образом, чтобы программа завершалась с кодом 0."

ban_words = ["exit", ";", "return", "["]

[[error_messages]]
"1" = "Функция return_function вернула неожидаемое значение"
"2" = "Рекурсивная функция fib вернула неверное число Фибоначчи"
"3" = "Некорректное значение аргумента для функции fib"
