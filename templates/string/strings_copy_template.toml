template_code = """
#include <stdlib.h>
#include <string.h>
#include <stdio.h>
    
int main() {
    /*
     * Демонстрация работы с копированием строк в C:
     * 1. Прямое присваивание указателей (string2 = string1)
     * 2. Копирование содержимого через strcpy()
     * 3. Изменение символа в исходной строке
     */

    // Инициализация исходной строки
    char string1[] = $$string_6$$;
    
    // Test 1: присваивание указателей (обе переменные ссылаются на одни данные)
    char *string2 = string1;
    
    // Модификация исходной строки
    string1[$$index_6$$] = $$char_6$$;
    
    // Проверка, что string2 "увидел" изменения в string1
    if (strcmp({[1]}, string2) != 0)
        return 1;  // Ошибка: string2 не отразил изменения string1
    
    // Test 2: настоящее копирование содержимого строки
    char string3[$$len_string_6$$];  // Буфер должен быть достаточного размера
    strcpy(string3, string1);  // Копирование содержимого
    
    // Проверка корректности копирования
    if (strcmp({[2]}, string3) != 0)
        return 2;  // Ошибка: string3 не совпадает с ожидаемым значением

    return 0;
}
"""

template_condition = "Заполните пропущенные значения так, чтобы программа завершилась с кодом 0."

ban_words = ["exit", "return", "[", "goto", "malloc", "free", "memcpy"]

[[error_messages]]
"1" = "string2 не отразил изменения в string1 (неверное значение после модификации)"
"2" = "string3 содержит неверные данные после копирования"
"3" = "Недостаточный размер буфера string3 для копирования"
"4" = "Попытка модификации за пределами строки"