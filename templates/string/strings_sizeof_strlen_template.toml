template_code = """
#include <stdlib.h>
#include <string.h>
#include <stdio.h>

/*
* Разница между sizeof и strlen:
* - sizeof возвращает размер массива в байтах (включая нуль-терминатор)
* - strlen возвращает длину строки до нуль-терминатора
* - Для указателей sizeof возвращает размер указателя, а не строки
*/

int main() {

    // Массив с автоматическим определением размера
    char string[] = $$string_array_5_1$$;
    
    // Сравнение размера массива и длины строки
    if (sizeof(string) {[1]} strlen(string))
        return 1;
    
    // Указатель на строковый литерал
    char *string2 = $$string_ptr_5$$;
    
    // Массив фиксированного размера с инициализацией
    char string3[$$len_string_5$$] = $$string_5$$;
    
    // Проверка размера указателя (обычно 4 или 8 байт)
    if ({[2]} != sizeof(string2))
        return 1;
    
    // Проверка размера массива
    if ({[3]} != sizeof(string3))
        return 1;

    return 0;
}
"""

template_condition = "Заполните пропущенные значения переменных таким образом, чтобы программа завершалась с кодом 0."

ban_words = ["exit", "return", "[", "goto", "malloc", "free", "strlen", "sizeof"]

[[error_messages]]
"1" = "Некорректное соотношение sizeof и strlen"
"2" = "Неверный размер указателя (ожидается 4 или 8 байт)"
"3" = "Размер массива не соответствует ожидаемому"
"4" = "Не учтен нуль-терминатор при расчете размера"